#pragma once

#include <stdint.h>

#include "read_file.h"

#define MEMORY_SIZE_BYTES 4096
#define ROM_ADDRESS_START 0x200
#define FONT_ADDRESS_START 0x50

typedef struct chip_8_machine{
  uint8_t *chip_8_memory_start;

  int pc_counter;
  uint8_t* game_start_address;

  uint8_t delay_timer;
  uint8_t sound_timer;

  uint8_t variable_registers[16];
} chip_8_machine;

chip_8_machine* assign_program_memory(chip_8_machine* chip_8);
chip_8_machine* assign_font_set(chip_8_machine* chip_8);

//need to set address of where it would be
// uint8_t FONT_SET[5][16] = {
//     0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
//     0x20, 0x60, 0x20, 0x20, 0x70, // 1
//     0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
//     0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
//     0x90, 0x90, 0xF0, 0x10, 0x10, // 4
//     0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
//     0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
//     0xF0, 0x10, 0x20, 0x40, 0x40, // 7
//     0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
//     0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
//     0xF0, 0x90, 0xF0, 0x90, 0x90, // A
//     0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
//     0xF0, 0x80, 0x80, 0x80, 0xF0, // C
//     0xE0, 0x90, 0x90, 0x90, 0xE0, // D
//     0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
//     0xF0, 0x80, 0xF0, 0x80, 0x80  // F
// };

//implement opcodes 35 total